# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
'.text.html':

  'strftime':
    'prefix': 'strftime'
    'body': """
          strftime('%m/%d/%Y')
      """

  'materialize col responsive':
    'prefix': 'col-materialize'
    'body': """
        <div class="col s12 m6 l6">
          $1
        </div>
        """

  'materialize row and col responsive':
    'prefix': 'row-r'
    'body': """
        <div class="row">
          <div class="col s12 m6 l6">
          $1
          </div>
        </div>
        """

  'materialize navbar':
    'prefix': 'nav-materialize'
    'body': """
        <nav role="navigation">
            <div class="nav-wrapper container">
              <%= link_to "iHav uHav", root_path, class: "brand-logo", id: "logo-container" %>
              <ul class="right hide-on-med-and-down">
              <% if user_signed_in? %>
                <li>
                <%= link_to('Logout', destroy_user_session_path, :method => :delete) %>
                </li>
              <% else %>
                <li>
                <%= link_to('Login', new_user_session_path)  %>
                </li>
              <% end %>
              </ul>

              <ul id="nav-mobile" class="side-nav" style="transform: translateX(-100%);">
                <li><a href="#">Navbar Link</a></li>
              <% if user_signed_in? %>
                <li>
                <%= link_to('Logout', destroy_user_session_path, :method => :delete) %>
                </li>
              <% else %>
                <li>
                <%= link_to('Login', new_user_session_path)  %>
                </li>
              <% end %>
              </ul>
              <a href="#" data-activates="nav-mobile" class="button-collapse"><i class="material-icons">menu</i></a>
            </div>
          </nav>
        """

  'materialize card simple-card':
    'prefix': 'card-materialize-simple-card'
    'body': """
        <div class="row">
          <div class="col s12 m6">
            <div class="card blue-grey darken-1">
              <div class="card-content white-text">
                <span class="card-title">Card Title</span>
                <p>I am a very simple card. I am good at containing small bits of information.
                I am convenient because I require little markup to use effectively.</p>
              </div>
              <div class="card-action">
                <a href="#">This is a link</a>
                <a href="#">This is a link</a>
              </div>
            </div>
          </div>
        </div>
        """

  'materialize card image-card':
    'prefix': 'card-materialize-image-card'
    'body': """
        <div class="row">
          <div class="col s12 m7">
            <div class="card">
              <div class="card-image">
                <img src="images/sample-1.jpg">
                <span class="card-title">Card Title</span>
              </div>
              <div class="card-content">
                <p>I am a very simple card. I am good at containing small bits of information.
                I am convenient because I require little markup to use effectively.</p>
              </div>
              <div class="card-action">
                <a href="#">This is a link</a>
              </div>
            </div>
          </div>
        </div>
        """

  'materialize horizontal-card':
    'prefix': 'card-materialize-horizontal-card'
    'body': """
        <div class="col s12 m7">
          <h2 class="header">Horizontal Card</h2>
          <div class="card horizontal">
            <div class="card-image">
              <img src="http://lorempixel.com/100/190/nature/6">
            </div>
            <div class="card-stacked">
              <div class="card-content">
                <p>I am a very simple card. I am good at containing small bits of information.</p>
              </div>
              <div class="card-action">
                <a href="#">This is a link</a>
              </div>
            </div>
          </div>
        </div>
        """

  'materialize reveal-card':
    'prefix': 'card-materialize-card-reveal-card'
    'body': """
        <div class="card">
          <div class="card-image waves-effect waves-block waves-light">
            <img class="activator" src="images/office.jpg">
          </div>
          <div class="card-content">
            <span class="card-title activator grey-text text-darken-4">Card Title<i class="material-icons right">more_vert</i></span>
            <p><a href="#">This is a link</a></p>
          </div>
          <div class="card-reveal">
            <span class="card-title grey-text text-darken-4">Card Title<i class="material-icons right">close</i></span>
            <p>Here is some more information about this product that is only revealed once clicked on.</p>
          </div>
        </div>
        """

  'materialize simple-card-dark':
    'prefix': 'card-materialize-card-simple-card'
    'body': """
        <div class="row">
          <div class="col s12 m5">
            <div class="card-panel teal">
              <span class="white-text">I am a very simple card. I am good at containing small bits of information.
              I am convenient because I require little markup to use effectively. I am similar to what is called a panel in other frameworks.
              </span>
            </div>
          </div>
        </div>
        """

  'materialize collection-with-header':
    'prefix': 'collection-with-header'
    'body': """
        <ul class="collection with-header">
          <li class="collection-header"><h4>First Names</h4></li>
          <li class="collection-item">Alvin</li>
        </ul>
        """

  'materialize simple_form_for':
    'prefix': 'sff-materialize'
    'body': """
        <%= simple_form_for($1) do |f| %>
          <%= f.error_notification %>

          <div class="form-inputs">
          </div>

          <div class="form-actions">
            <%= f.button :submit %>
          </div>
        <% end %>

        """

  'local_time':
    'prefix': 'lt local_time'
    'body': "<%= local_time($1, '%l:%M%P') %>"


  'materialize hide-on-small-only':
    'prefix': 'hide-on-small-only'
    'body': "hide-on-small-only"

  'materialize hide-on-med-only':
    'prefix': 'hide-on-med-only'
    'body': "hide-on-med-only"

  'materialize hide-on-med-and-down':
    'prefix': 'hide-on-med-and-down'
    'body': "hide-on-med-and-down"

  'materialize hide-on-med-and-up':
    'prefix': 'hide-on-med-and-up'
    'body': "hide-on-med-and-up"

  'materialize hide-on-large-only':
    'prefix': 'hide-on-large-only'
    'body': "hide-on-large-only"








'.source.ruby':


  'Faker Email':
    'prefix': 'faker-email'
    'body': """
        Faker::Internet.email
        """

  'Faker First Name':
    'prefix': 'faker-first-name'
    'body': """
        Faker::Name.first_name
        """

  'Faker Last Name':
    'prefix': 'faker-last-name'
    'body': """
        Faker::Name.last_name
        """

  'Faker Words':
    'prefix': 'faker-words'
    'body': """
        Faker::Hipster.words(4)
        """

  'Faker Sentences':
    'prefix': 'faker-sentences'
    'body': """
        Faker::Hipster.sentence(4)
        """

  'Faker Paragraphs':
    'prefix': 'faker-paragraphs'
    'body': """
        Faker::Hipster.paragraph(2)
        """

  'Faker Password':
    'prefix': 'faker-password'
    'body': """
        Faker::Internet.password(8)
        """

  'Faker Avatar':
    'prefix': 'faker-avatar'
    'body': """
        Faker::Avatar.image
        """

  'Faker Chuck Fact':
    'prefix': 'faker-chuck-fact'
    'body': """
        Faker::ChuckNorris.fact
        """

  'Faker Hacker say_something_smart':
    'prefix': 'faker-say-something-smart'
    'body': """
        Faker::Hacker.say_something_smart
        """

  'Faker Company Name':
    'prefix': 'faker-company-name'
    'body': """
        Faker::Company.name
        """

  'Faker Company Logo':
    'prefix': 'faker-company-logo'
    'body': """
        Faker::Company.logo
        """

  'Validates Presence':
    'prefix': 'validates-presense-true'
    'body': """
        validates :email, presence: true
        """

  'Validates Uniqueness':
    'prefix': 'validates-uniqueness-true'
    'body': """
        validates :email, uniqueness: true
        """
